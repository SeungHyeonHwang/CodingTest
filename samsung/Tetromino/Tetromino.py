
def solution(n,m):
	answer = 0
	tetromino = [[[0,0],[0,1],[0,2],[0,3]], 
				[[0,0],[1,0],[2,0],[3,0]], 
				[[0,0],[0,1],[1,0],[1,1]], 
				[[0,0],[0,1],[0,2],[1,0]], 
				[[1,0],[1,1],[1,2],[0,2]], 
				[[0,0],[1,0],[1,1],[1,2]], 
				[[0,0],[0,1],[0,2],[1,2]],
				[[0,0],[1,0],[2,0],[2,1]],
				[[0,1],[1,1],[2,1],[2,0]],
				[[0,0],[0,1],[1,0],[2,0]],
				[[0,0],[0,1],[1,1],[2,1]],
				[[0,0],[1,0],[2,0],[2,1]],
				[[0,1],[1,1],[2,0],[2,1]],
				[[0,0],[0,1],[1,0],[2,0]],
				[[0,0],[0,1],[1,1],[2,1]],
				[[0,0],[0,1],[0,2],[1,1]],
				[[0,1],[1,0],[1,1],[1,2]],
				[[0,0],[1,0],[1,1],[2,0]],
				[[0,1],[1,0],[1,1],[2,1]],
				[[0,1],[1,0],[1,1],[2,0]],
				[[0,0],[1,0],[1,1],[2,1]],
				[[1,0],[1,1],[0,1],[0,2]],
				[[0,0],[0,1],[1,1],[1,2]]]

	for i in range(n) :
		for j in range(m) :
			for tetro in tetromino :
				result = 0
				for t in tetro :				
					x=i+t[0]
					y=j+t[1]
					if x<0 or y<0 or x>=n or y>=m:
						result = 0
						break
					result+=maps[x][y]
				answer = max(result, answer)	
	return answer

n,m = map(int, input().split())
maps = [list(map(int, input().split())) for _ in range(n)]
print(solution(n,m))